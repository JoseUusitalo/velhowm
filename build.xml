<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="VELHOWM" basedir="." default="use">
	<description>Group #1 Project: VELHO Warehouse Management</description>
	<property name="target" value="1.8"/>
	<property name="source" value="1.8"/>

	<property name="lib.dir" location="lib" />
	<property name="src.dir" location="src" />
	<property name="src.hibernatemappings.dir" location="src/velho/model" />
	<property name="test.dir" location="test" />
	<property name="build.src.dir" location="bin/src" />
	<property name="build.src.hibernatemappings.dir" location="bin/src/velho/model" />
	<property name="build.test.dir" location="bin/test" />
	<property name="test.report.dir" location="testreport" />

	<property name="main-class" value="velho.view.MainWindow"/>

	<path id="velho.classpath">
		<fileset dir="${lib.dir}" includes="h2-1.4.191.jar" />
		<fileset dir="${lib.dir}" includes="apache-log4j-1.2.17/*.jar" />
		<fileset dir="${lib.dir}" includes="eclipse/*.jar" />
		<fileset dir="${lib.dir}" includes="hibernate/java8/*.jar" />
		<fileset dir="${lib.dir}" includes="hibernate/jpa/*.jar" />
		<fileset dir="${lib.dir}" includes="hibernate/required/*.jar" />
		<pathelement location="${build.src.dir}" />
	</path>

	<target name="clean" description="delete old files">
		<pathconvert property="classpathProp" refid="velho.classpath"/>
		<echo>Classpath is: ${classpathProp}</echo>

		<delete dir="${build.src.dir}" />
		<delete dir="${build.test.dir}" />
		<delete dir="${test.report.dir}" />
	</target>

	<target name="init" description="create the directories">
		<tstamp/>
		<mkdir dir="${build.src.dir}" />
		<mkdir dir="${build.test.dir}" />
		<mkdir dir="${test.report.dir}" />
	</target>

	<target name="compile" depends="clean, init" description="compile the classes">
		<javac source="${source}" target="${target}" srcdir="${src.dir}" destdir="${build.src.dir}" includeantruntime="false">
			<classpath refid="velho.classpath" />
		</javac>

		<javac srcdir="${test.dir}" destdir="${build.test.dir}" includeantruntime="false">
			<classpath refid="velho.classpath" />
		</javac>

		<!-- Copy configuration files. -->
		<copy todir="${build.src.dir}">
			<fileset dir="${src.dir}" includes="**/*.xml,**/*.properties"/>
		</copy>

		<!-- Copy Hibernate mappings into the correct folder. -->
		<copy todir="${build.src.hibernatemappings.dir}">
			<fileset dir="${src.hibernatemappings.dir}" includes="**/*.xml"/>
		</copy>
	</target>

	<target name="test" depends="compile" description="run the tests">
		<junit printsummary="yes" haltonerror="yes" haltonfailure="no">

			<formatter type="plain" usefile="false" />
			<formatter type="xml" />

			<classpath refid="velho.classpath" />

			<classpath>
				<pathelement location="${build.test.dir}"/>
			</classpath>

			<batchtest todir="${test.report.dir}">
				<fileset dir="${test.dir}">
					<include name="**/*Test.java" />
					<exclude name="**/All*Tests.java" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="jar" depends="compile" description="make the jar">
		<jar destfile="VELHOWM_${DSTAMP}.jar" basedir="${build.src.dir}">
			<manifest>
			    <attribute name="Class-Path" value="${lib.dir}"/>
				<attribute name="Main-Class" value="${main-class}"/>
			</manifest>
			<zipgroupfileset dir="${lib.dir}"/>
		</jar>
	</target>

	<target name="use" depends="jar" description="use the jar">
 		<java jar="VELHOWM_${DSTAMP}.jar" fork="true"/>
	</target>
</project>
