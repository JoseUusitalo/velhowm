<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<project name="VELHOWM" basedir="." default="use">
	<description>Group #1 Project: VELHO Warehouse Management</description>
	<property name="target" value="1.8"/>
	<property name="source" value="1.8"/>
	<property name="projectName" value="VELHOWM" />
	<property name="main.class" value="velho.view.MainWindow"/>

	<property name="src.dir" location="src" />
	<property name="test.dir" location="test" />
	<property name="dist.dir" location="dist" />
	<property name="lib.dir" location="lib" />
	<property name="build.dir" location="bin" />
	<property name="javadoc.dir" location="javadoc" />
	<property name="report.dir" location="report" />
	<property name="dist.src.dir" location="dist/src" />
	<property name="dist.test.dir" location="dist/test" />
	<property name="lib.checkstyle.dir" location="lib/checkstyle" />
	<property name="build.lib.dir" location="bin/lib" />
	<property name="src.hibernatemappings.dir" location="src/velho/model" />
	<property name="dist.src.hibernatemappings.dir" location="dist/src/velho/model" />

	<path id="velho.classpath">
		<fileset dir="${lib.dir}" includes="h2-1.4.191.jar" />
		<fileset dir="${lib.dir}" includes="apache-log4j-1.2.17/*.jar" />
		<fileset dir="${lib.dir}" includes="eclipse/*.jar" />
		<fileset dir="${lib.dir}" includes="hibernate/java8/*.jar" />
		<fileset dir="${lib.dir}" includes="hibernate/jpa/*.jar" />
		<fileset dir="${lib.dir}" includes="hibernate/required/*.jar" />
		<pathelement location="${dist.test.dir}" />
		<pathelement location="${dist.src.dir}" />
	</path>

	<path id="pmd.classpath">
		<pathelement location="${build.dir}"/>
		<fileset dir="${lib.dir}/pmd/">
			<include name="*.jar"/>
		</fileset>
	</path>

	<target name="clean" description="delete old build files">
		<delete dir="${dist.dir}" />
		<delete dir="${build.lib.dir}" />
		<delete dir="${report.dir}" />
		<delete dir="${javadoc.dir}" />
	</target>

	<target name="init" description="create the directories">
		<tstamp/>

		<pathconvert property="classpathProp" refid="velho.classpath"/>
		<echo>Classpath is: ${classpathProp}</echo>

		<mkdir dir="${dist.src.dir}" />
		<mkdir dir="${dist.test.dir}" />
		<mkdir dir="${build.lib.dir}" />
		<mkdir dir="${report.dir}" />
		<mkdir dir="${javadoc.dir}" />
	</target>

	<target name="pmd" description="do static code analysis">
		<pathconvert property="classpathPMDProp" refid="pmd.classpath"/>
		<echo>PMD classpath is: ${classpathPMDProp}</echo>

		<taskdef name="pmd" classname="net.sourceforge.pmd.ant.PMDTask" classpathref="pmd.classpath"/>

		<pmd shortFilenames="true" rulesetfiles="rulesets/java/basic.xml,
												 rulesets/java/clone.xml,
												 rulesets/java/codesize.xml,
												 rulesets/java/comments.xml,
												 rulesets/java/design.xml,
												 rulesets/java/empty.xml,
												 rulesets/java/imports.xml,
												 rulesets/java/junit.xml,
												 rulesets/java/naming.xml,
												 rulesets/java/strictexception.xml,
												 rulesets/java/strings.xml,
												 rulesets/java/sunsecure.xml,
												 rulesets/java/typeresolution.xml,
												 rulesets/java/unnecessary.xml,
												 rulesets/java/unusedcode.xml">
			<sourceLanguage name="java" version="${target}"/>

			<formatter type="html" toFile="${report.dir}/pmd_report.html">
				<param name="linePrefix" value=".line"/>
			</formatter>

			<fileset dir="${src.dir}">
				<include name="**/*.java"/>
			</fileset>
		</pmd>
	</target>

	<target name="checkstyle" description="generates a report of code convention violations">
		<taskdef resource="com/puppycrawl/tools/checkstyle/ant/checkstyle-ant-task.properties" classpath="${lib.checkstyle.dir}/checkstyle-6.17-all.jar"/>

		<checkstyle config="${lib.checkstyle.dir}/sun_checks_tweaked.xml" failureProperty="checkstyle.failure" failOnViolation="false">
			<classpath refid="velho.classpath" />
			<formatter type="xml" tofile="${build.dir}/checkstyle_report.xml"/>
			<fileset dir="${src.dir}" includes="**/*.java"/>
		</checkstyle>

		<style in="${build.dir}/checkstyle_report.xml" out="${report.dir}/checkstyle_report.html" style="${lib.checkstyle.dir}/checkstyle-noframes-sorted.xsl"/>
	</target>

	<target name="javadoc" description="generate javadocs">
		<javadoc destdir="${javadoc.dir}" packagenames="*.*" author="true" private="true" version="true" windowtitle="VELHO Warehouse Management Documentation">
			<packageset dir="${src.dir}" />
			<classpath refid="velho.classpath" />
		</javadoc>
	</target>

	<target name="extra" depends="clean, init, pmd, checkstyle, javadoc" description="perform extra actions not directly related to compiling the software" />

	<target name="compile" depends="clean, init, extra" description="compile the source and test classes">
		<javac srcdir="${src.dir}" destdir="${dist.src.dir}" includeantruntime="false" source="${source}" target="${target}">
			<classpath refid="velho.classpath" />
		</javac>

		<javac srcdir="${test.dir}" destdir="${dist.test.dir}" includeantruntime="false">
			<classpath refid="velho.classpath" />
		</javac>

		<!-- Copy configuration files. -->
		<copy todir="${dist.src.dir}">
			<fileset dir="${src.dir}" includes="**/*.xml,**/*.properties"/>
		</copy>

		<!-- Copy Hibernate mappings into the correct folder. -->
		<copy todir="${dist.src.hibernatemappings.dir}">
			<fileset dir="${src.hibernatemappings.dir}" includes="**/*.xml"/>
		</copy>
	</target>

	<target name="dependencies" description="copy all dependencies into a single jar">
		<jar jarfile="${build.lib.dir}/dependencies.jar">
			<zipgroupfileset dir="${lib.dir}">
				<include name="**/*.jar" />
			</zipgroupfileset>
		</jar>
	</target>

	<target name="test" depends="compile" description="run the tests">
		<junit showoutput="true" printsummary="false" haltonerror="no" haltonfailure="no">
			<!-- Plain text for console. -->
			<formatter type="plain" usefile="false" />

			<!-- XML for file. -->
			<formatter type="xml" />

			<classpath refid="velho.classpath" />

			<classpath>
				<pathelement location="${dist.test.dir}"/>
			</classpath>

			<batchtest todir="${report.dir}">
				<fileset dir="${dist.test.dir}">
					<!-- If this is used the main database is still in use and cannot be used in the application.
					<include name="**/*Tests.class" />-->
					<include name="**/AllTests.class" />
				</fileset>
			</batchtest>
		</junit>
	</target>

	<target name="shutdown" depends="test" description="shuts down both database connections">
		<!-- This does not work. -->
 		<java classname="velhotest.ShutdownDatabases">
			<classpath refid="velho.classpath" />
		</java>
	</target>

	<target name="jar" depends="compile, test, dependencies" description="make the jar">
		<jar destfile="${dist.dir}/${projectName}_${DSTAMP}.jar" basedir="${dist.src.dir}">
			<manifest>
				<attribute name="Main-Class" value="${main.class}"/>
			</manifest>

			<zipfileset src="${build.lib.dir}/dependencies.jar" excludes="META-INF/*.SF" />
		</jar>
	</target>

	<target name="use" depends="jar" description="use the jar">
 		<java jar="${dist.dir}/${projectName}_${DSTAMP}.jar" fork="true">
			<classpath refid="velho.classpath" />
		</java>
	</target>
</project>
