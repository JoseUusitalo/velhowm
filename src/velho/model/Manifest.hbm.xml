<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE hibernate-mapping PUBLIC
 "-//Hibernate/Hibernate Mapping DTD//EN"
 "http://www.hibernate.org/dtd/hibernate-mapping-3.0.dtd">
<hibernate-mapping>
	<class name="velho.model.Manifest" table="MANIFESTS">
		<meta attribute="class-description">A list of ProductBox objects that have been delivered to the warehouse from somewhere else.</meta>

		<id name="databaseID"
			column="manifest_id"
			type="int">
			<generator class="native" />
		</id>

		<property	name="driverID"
					column="driver_id"
					type="int" />

		<property	name="orderedDate"
					column="date_ordered"
					type="date" />

		<property	name="receivedDate"
					column="date_received"
					type="date" />

		<!-- No cascade solves an exception. -->
		<!-- Many-to-one: This object can have one referenced object, the referenced object can be referenced from many objects.
			 Cascade changes.
			 "Select" eager fetching: load the referenced object when this object is loaded. -->
		<many-to-one	name="state"
						class="velho.model.ManifestState"
						column="state"
						not-null="true"
						fetch="select"
						lazy="false" />

		<!-- No cascade solves an exception. -->
		<!-- TODO: This is wrong, it should be many-to-one with a custom join table. -->
		<set name="boxes"
			 table="manifest_productboxes"
			 fetch="select"
			 lazy="false" >
			<key column="manifest" />
			<many-to-many column="productbox"
						  class="velho.model.ProductBox" />
		</set>

		<!-- TODO: CHECK (`date_received`>=`date_ordered`) -->
	</class>
</hibernate-mapping>
